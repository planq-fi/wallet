{"version":3,"sources":["webpack:///./src/features/Settings/Import/Import.tsx","webpack:///./src/features/Settings/Import/components/index.ts","webpack:///./src/features/Settings/Import/components/ImportBox.tsx","webpack:///./src/features/Settings/Import/components/ImportSuccess.tsx"],"names":["Content","styled","div","Import","Component","step","this","setState","prevState","Math","min","render","history","importState","importSuccess","importFailure","props","state","steps","heading","translateRaw","component","ImportBox","backOption","goBack","ImportSuccess","regressStep","onBack","Step","ContentPanel","width","stepper","current","total","length","onNext","advanceStep","connector","connect","importError","dispatch","bindActionCreators","withRouter","FilePicker","label","FilePickerInput","input","ImportBoxContainer","dragging","toImport","e","fileReader","FileReader","onload","result","submit","target","files","inputFile","readAsText","dataTransfer","items","kind","draggedFile","getAsFile","onDrop","handleFileSelection","onDragOver","onDragLeave","InlineMessage","htmlFor","data-testid","id","type","onChange","ImportSuccessContainer","LinkApp","href","Button","fullwidth","secondary"],"mappings":"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","file":"Import.5a0405333748d1e98d53.js","sourcesContent":["import { Component } from 'react';\n\nimport { AnyAction, bindActionCreators, Dispatch } from '@reduxjs/toolkit';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ContentPanel } from '@components';\nimport { AppState, importError, importState, importSuccess } from '@store';\nimport { translateRaw } from '@translations';\nimport { goBack } from '@utils';\n\nimport { ImportBox, ImportSuccess } from './components';\n\nconst Content = styled.div`\n  text-align: center;\n`;\n\nexport class Import extends Component<Props> {\n  public state = { step: 0 };\n\n  public render() {\n    const { history, importState, importSuccess, importFailure } = this.props;\n    const onBackFunc = () => goBack(history);\n    const { step } = this.state;\n    const steps = [\n      {\n        heading: translateRaw('SETTINGS_IMPORT_HEADING'),\n        component: ImportBox,\n        backOption: onBackFunc\n      },\n      {\n        heading: translateRaw('SETTINGS_IMPORT_SUCCESS_HEADING'),\n        component: ImportSuccess,\n        backOption: this.regressStep\n      }\n    ];\n    const onBack = steps[step].backOption;\n    const Step = steps[step].component;\n\n    return (\n      <ContentPanel\n        width={560}\n        onBack={onBack}\n        heading={steps[step].heading}\n        stepper={{\n          current: step + 1,\n          total: steps.length\n        }}\n      >\n        <Content>\n          <Step\n            onNext={this.advanceStep}\n            importSuccess={importSuccess}\n            importFailure={importFailure}\n            importState={importState}\n          />\n        </Content>\n      </ContentPanel>\n    );\n  }\n\n  private advanceStep = () =>\n    this.setState(() => ({\n      step: 1\n    }));\n\n  private regressStep = () =>\n    this.setState((prevState: any) => ({\n      step: Math.min(0, prevState.step - 1)\n    }));\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  importSuccess: importSuccess(state),\n  importFailure: !!importError(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      importState: importState\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector> & RouteComponentProps;\n\nexport default withRouter(connector(Import));\n","export { default as ImportBox } from './ImportBox';\nexport { default as ImportSuccess } from './ImportSuccess';\n","import { Component } from 'react';\n\nimport styled from 'styled-components';\n\nimport { InlineMessage } from '@components';\nimport translate from '@translations';\n\nconst FilePicker = styled.label`\n  background: none;\n  color: #1eb8e7;\n  cursor: pointer;\n`;\nconst FilePickerInput = styled.input`\n  display: none !important;\n`;\n\ninterface ImportBoxContainerProps {\n  dragging: boolean;\n}\n\nconst ImportBoxContainer = styled.div<ImportBoxContainerProps>`\n  color: #9b9b9b;\n  background: #e8eaed;\n  padding: 6rem;\n  border-radius: 0.375em;\n  box-shadow: ${(props) => (props.dragging ? '0px 0px 0px 2px #1eb8e7;' : 'none')};\n`;\n\ninterface ImportProps {\n  importState(importedCache: string): void;\n  importSuccess: boolean;\n  importFailure: boolean;\n  onNext(): void;\n}\n\nexport default class ImportBox extends Component<ImportProps> {\n  public state = { dragging: false };\n\n  public async componentDidUpdate() {\n    const { importSuccess, onNext } = this.props;\n    if (importSuccess) {\n      onNext();\n    }\n  }\n\n  public submit = (toImport: string) => {\n    const { importState } = this.props;\n    importState(toImport);\n  };\n\n  public render() {\n    const { dragging } = this.state;\n    const { importFailure } = this.props;\n    return (\n      <ImportBoxContainer\n        onDrop={this.handleFileSelection}\n        onDragOver={() => this.setState({ dragging: true })}\n        onDragLeave={() => this.setState({ dragging: false })}\n        dragging={dragging}\n      >\n        {importFailure ? (\n          <InlineMessage>{translate('SETTINGS_IMPORT_INVALID')}</InlineMessage>\n        ) : (\n          translate('SETTINGS_IMPORT_COPY')\n        )}\n        <br />\n        <br />\n        <FilePicker htmlFor=\"upload\">\n          {translate('SETTINGS_IMPORT_BUTTON')}\n          <FilePickerInput\n            data-testid=\"upload-input\"\n            id=\"upload\"\n            type=\"file\"\n            onChange={this.handleFileSelection}\n          />\n        </FilePicker>{' '}\n        {translate('SETTINGS_IMPORT_PASTE')}\n        <br />\n      </ImportBoxContainer>\n    );\n  }\n\n  private handleFileSelection = (e: any) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      if (fileReader.result) {\n        this.submit(fileReader.result as string);\n      }\n    };\n    if (e.target.files && e.target.files[0]) {\n      const target = e.target;\n      const inputFile = target.files[0];\n      fileReader.readAsText(inputFile, 'utf-8');\n    }\n    if (e.dataTransfer && e.dataTransfer.items && e.dataTransfer.items[0].kind === 'file') {\n      const draggedFile = e.dataTransfer.items[0].getAsFile();\n      fileReader.readAsText(draggedFile, 'utf-8');\n    }\n  };\n}\n","import styled from 'styled-components';\n\nimport { Button, LinkApp } from '@components';\nimport translate from '@translations';\n\nconst ImportSuccessContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default function ImportSuccess() {\n  return (\n    <ImportSuccessContainer>\n      {translate('SETTINGS_IMPORT_SUCCESS')}\n      <LinkApp href=\"/settings\">\n        <Button fullwidth={true} secondary={true}>\n          {translate('SETTINGS_IMPORT_COMPLETE')}\n        </Button>\n      </LinkApp>\n    </ImportSuccessContainer>\n  );\n}\n"],"sourceRoot":""}