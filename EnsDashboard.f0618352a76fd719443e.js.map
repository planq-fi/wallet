{"version":3,"sources":["webpack:///./src/features/Ens/EnsDashboard.tsx","webpack:///./src/features/Ens/EnsTable.tsx","webpack:///./src/features/Ens/MyDomains.tsx","webpack:///./src/features/Ens/NoEnsDomains.tsx"],"names":["useSelector","getENSRecords","getENSFetched","StyledLayout","DashboardWrapper","DashboardSubHeader","as","className","translateRaw","DashboardPanel","heading","Box","ml","mt","mb","styled","div","Heading","SPACING","NONE","BASE","BREAK_POINTS","SCREEN_SM","SpinnerContainer","EnsTable","records","isFetched","length","Spinner","size","domainOwnershipRecords","getContactByAddressAndNetworkId","useContacts","domainTable","head","body","map","record","index","unixTimestamp","parseInt","expiryDate","RowAlignment","getTimeDifference","Date","SECONDS_IN_MONTH","Tooltip","type","tooltip","Label","Account","title","owner","label","address","truncate","align","readableDomainName","formatDateTime","LinkApp","isExternal","href","ENS_MANAGER_URL","domainName","display","alignItems","Icon","width","config","primaryColumn","sortableColumn","FixedSizeCollapsibleTable","maxHeight","breakpoint","breakpointToNumber","SCREEN_XS","span","NoDomainsWrapper","NoDomainsCenter","NoDomainsHeading","NoDomainsDescription","BLUE_BRIGHT","COLORS","LG","BLUE_GREY","FONT_SIZE","XL","SM"],"mappings":"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","file":"EnsDashboard.f0618352a76fd719443e.js","sourcesContent":["import { Heading } from '@mycrypto/ui';\nimport styled from 'styled-components';\n\nimport { Box, DashboardPanel, Icon, LinkApp, PoweredByText, Text } from '@components';\nimport { ROUTE_PATHS } from '@config';\nimport { getENSFetched, getENSRecords, useSelector } from '@store';\nimport { BREAK_POINTS, SPACING } from '@theme';\nimport { translateRaw } from '@translations';\n\nimport { EnsTable } from './EnsTable';\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`;\n\nconst DashboardSubHeader = styled(Heading)`\n  margin-top: ${SPACING.NONE};\n  font-weight: bold;\n  margin-bottom: ${SPACING.BASE};\n`;\n\nconst StyledLayout = styled.div`\n  width: 960px;\n  @media (max-width: ${BREAK_POINTS.SCREEN_SM}) {\n    width: 100%;\n  }\n  .Layout-content {\n    padding: ${SPACING.NONE};\n  }\n`;\n\nexport default function EnsDashboard() {\n  const ensOwnershipRecords = useSelector(getENSRecords);\n  const isEnsFetched = useSelector(getENSFetched);\n  return (<StyledLayout>\n    <DashboardWrapper>\n      <DashboardSubHeader as=\"h2\" className=\"Dashboard-desktop-top-left-heading\">\n        {translateRaw('ENS_DASHBOARD_HEADER')}\n      </DashboardSubHeader>\n      <DashboardPanel\n        heading={translateRaw('ENS_MY_DOMAINS_TABLE_HEADER')}\n        >\n          <Box ml=\"1em\" mt=\"20px\" mb=\"1em\">\n            Coming soon\n          </Box>\n      </DashboardPanel>\n    </DashboardWrapper>\n  </StyledLayout>)\n  return (\n    <StyledLayout>\n      <DashboardWrapper>\n        <DashboardSubHeader as=\"h2\" className=\"Dashboard-desktop-top-left-heading\">\n          {translateRaw('ENS_DASHBOARD_HEADER')}\n        </DashboardSubHeader>\n        <DashboardPanel\n          heading={translateRaw('ENS_MY_DOMAINS_TABLE_HEADER')}\n          headingRight={\n            <Box variant=\"rowAlign\">\n              <LinkApp href={ROUTE_PATHS.SETTINGS.path} mr={SPACING.BASE} variant=\"opacityLink\">\n                <Box variant=\"rowAlign\">\n                  <Icon type=\"edit\" width=\"1em\" color=\"BLUE_SKY\" />\n                  <Text ml={SPACING.XS} mb={0}>\n                    {translateRaw('EDIT')}\n                  </Text>\n                </Box>\n              </LinkApp>\n              <LinkApp href={ROUTE_PATHS.ADD_ACCOUNT.path} variant=\"opacityLink\">\n                <Box variant=\"rowAlign\">\n                  <Icon type=\"add-bold\" width=\"1em\" />\n                  <Text ml={SPACING.XS} mb={0}>\n                    {translateRaw('ADD')}\n                  </Text>\n                </Box>\n              </LinkApp>\n            </Box>\n          }\n        >\n          <EnsTable records={ensOwnershipRecords} isFetched={isEnsFetched} />\n        </DashboardPanel>\n      </DashboardWrapper>\n      {<PoweredByText provider=\"ENS\" />}\n    </StyledLayout>\n  );\n}\n","import styled from 'styled-components';\n\nimport { Spinner } from '@components';\nimport { DomainNameRecord } from '@types';\n\nimport MyDomains from './MyDomains';\nimport NoDomains from './NoEnsDomains';\n\nconst SpinnerContainer = styled.div`\n  height: 400px;\n  display: float;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const EnsTable = ({\n  records,\n  isFetched\n}: {\n  records: DomainNameRecord[];\n  isFetched: boolean;\n}) => {\n  return (\n    <>\n      {records.length === 0 &&\n        (isFetched ? (\n          <NoDomains />\n        ) : (\n          <SpinnerContainer>\n            <Spinner size={3} />\n          </SpinnerContainer>\n        ))}\n      {records.length !== 0 && <MyDomains domainOwnershipRecords={records} />}\n    </>\n  );\n};\n\nexport default EnsTable;\n","import styled from 'styled-components';\n\nimport { Account, Box, FixedSizeCollapsibleTable, Icon, LinkApp, Tooltip } from '@components';\nimport { ENS_MANAGER_URL, SECONDS_IN_MONTH } from '@config/constants';\nimport { useContacts } from '@services/Store';\nimport { BREAK_POINTS, breakpointToNumber } from '@theme';\nimport { translateRaw } from '@translations';\nimport { DomainNameRecord, TAddress } from '@types';\nimport { formatDateTime, getTimeDifference } from '@utils';\n\nimport { MyDomainsProps } from './types';\n\nconst Label = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nconst RowAlignment = styled.div<{ align?: string }>`\n  float: ${({ align = 'inherit' }) => align};\n`;\n\nexport default function MyDomains({ domainOwnershipRecords }: MyDomainsProps) {\n  const { getContactByAddressAndNetworkId } = useContacts();\n  const domainTable = {\n    head: [\n      '',\n      translateRaw('ENS_MY_DOMAINS_TABLE_OWNER_ADDRESS_HEADER'),\n      translateRaw('ENS_MY_DOMAINS_TABLE_DOMAIN_NAME_HEADER'),\n      translateRaw('ENS_MY_DOMAINS_TABLE_EXPIRES_HEADER'),\n      translateRaw('ENS_MY_DOMAINS_TABLE_RENEW_HEADER')\n    ],\n    body: domainOwnershipRecords.map((record: DomainNameRecord, index: number) => {\n      const unixTimestamp = parseInt(record.expiryDate, 10);\n      return [\n        <RowAlignment key={index}>\n          {getTimeDifference(new Date(), unixTimestamp) < SECONDS_IN_MONTH && (\n            <Tooltip type=\"warning\" tooltip={translateRaw('ENS_EXPIRING_SOON')} />\n          )}\n        </RowAlignment>,\n        <Label key={2}>\n          <Account\n            title={getContactByAddressAndNetworkId(record.owner as TAddress, 'Ethereum')?.label}\n            address={record.owner}\n            truncate={true}\n          />\n        </Label>,\n        <RowAlignment key={3} align=\"left\">\n          {record.readableDomainName}\n        </RowAlignment>,\n        <RowAlignment key={4} align=\"left\">\n          {formatDateTime(unixTimestamp)}\n        </RowAlignment>,\n        <RowAlignment key={5} align=\"left\">\n          <LinkApp\n            isExternal={true}\n            href={`${ENS_MANAGER_URL}/name/${record.domainName}?utm_source=mycrypto`}\n          >\n            <Box display={'inline-flex'} alignItems={'center'}>\n              <Icon type=\"link-out\" width=\"1em\" />\n            </Box>\n          </LinkApp>\n        </RowAlignment>\n      ];\n    }),\n    config: {\n      primaryColumn: translateRaw('ENS_MY_DOMAINS_TABLE_EXPIRES_HEADER'),\n      sortableColumn: translateRaw('ENS_MY_DOMAINS_TABLE_EXPIRES_HEADER')\n    }\n  };\n\n  return (\n    <FixedSizeCollapsibleTable\n      maxHeight={'800px'}\n      breakpoint={breakpointToNumber(BREAK_POINTS.SCREEN_XS)}\n      {...domainTable}\n    />\n  );\n}\n","import styled from 'styled-components';\n\nimport { COLORS, FONT_SIZE, SPACING } from '@theme';\nimport translate from '@translations';\n\nconst { BLUE_BRIGHT } = COLORS;\n\nconst NoDomainsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: ${SPACING.NONE} ${SPACING.BASE} ${SPACING.BASE} ${SPACING.BASE};\n  width: 100%;\n`;\n\nconst NoDomainsCenter = styled.div`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: ${SPACING.BASE};\n  margin-bottom: ${SPACING.LG};\n`;\n\nconst NoDomainsHeading = styled.div`\n  color: ${COLORS.BLUE_GREY};\n  font-size: ${FONT_SIZE.XL};\n  font-weight: bold;\n  text-align: center;\n  margin-top: ${SPACING.SM};\n  margin-bottom: ${SPACING.SM};\n`;\n\nconst NoDomainsDescription = styled.div`\n  color: ${COLORS.BLUE_GREY};\n  text-align: center;\n  font-weight: normal;\n  > a {\n    color: ${BLUE_BRIGHT};\n  }\n`;\n\nexport default function NoDomains() {\n  return (\n    <NoDomainsWrapper>\n      <NoDomainsCenter>\n        <NoDomainsHeading>{translate('ENS_DOMAINS_NO_DOMAINS')}</NoDomainsHeading>\n        <NoDomainsDescription>{translate('ENS_DOMAINS_NO_DOMAINS_MORE')}</NoDomainsDescription>\n      </NoDomainsCenter>\n    </NoDomainsWrapper>\n  );\n}\n"],"sourceRoot":""}